import { fileURLToPath } from "url";
import glob from "glob";
import path from "path";
export const isESM = true;
export function dirname(url) {
    return path.dirname(fileURLToPath(url));
}
export function resolve(...paths) {
    const imports = [];
    paths.forEach((ps) => {
        const resolvedPath = ps.startsWith("./")
            ? ps.replace(/^\.\//, path.resolve() + "/")
            : ps;
        const files = glob
            .sync(resolvedPath)
            .filter((file) => typeof file === "string");
        files.forEach((file) => {
            if (!imports.includes(file)) {
                imports.push("file://" + file);
            }
        });
    });
    return imports;
}
export async function importx(...paths) {
    const files = resolve(...paths);
    await Promise.all(files.map((file) => import(file)));
}
//# sourceMappingURL=index.js.map